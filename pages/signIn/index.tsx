import { FunctionComponent, useState } from 'react'
import Head from 'next/head'
import styles from '../styles/Home.module.scss'
import { Footer } from '../../components/Footer'
import Image from 'next/image'
import { useForm, SubmitHandler } from 'react-hook-form'
import { newUser } from '../../lib/api/apis'

interface formInput {
  email: string,
  user_name: string,
  password: string,
  github_auth: string,
  google_auth: string,
}

const Page: FunctionComponent = () => {
  const [isRegister, setIsRegister] = useState<boolean>(false)

  const { register, handleSubmit, formState: { errors } } = useForm<formInput>()
  
  const onSubmit : SubmitHandler<formInput> = async (data) => {
    console.log(data)
    try {
      const res = await newUser(data)
      console.log(res)
    } catch (error) {
      console.log(error)
    }
  }

  return (
    <div>
      <Head>
        <title>マンガランク - Manga Rank</title>
        <meta
          name='description'
          content='Generated by マンガランク - Manga Rank'
        />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <div className='h-screen flex flex-col'>
        <main className='grow bg-slate-200 flex justify-center'>
          <div className='relative w-1/2 h-2/3 self-center rounded-md shadow-lg bg-white overflow-hidden'>
            <div
              className={`absolute top-0 left-0 w-7/12 h-full text-center transition-all duration-700 ${
                isRegister ? styles.registerForm : ''
              }`}
            >
              <div className='p-5'>
                <div className='px-24 mb-5'>
                  <Image
                    src='/logo.png'
                    width={745}
                    height={406}
                    loader={({ src }) => src}
                    layout='responsive'
                    alt='Manga Rank'
                  />
                </div>
                <h1 className='text-xl font-bold mb-3'>マンガランク</h1>
                <h2 className='mb-5'>Manga Rank</h2>
                <form className='px-12' onSubmit={handleSubmit(onSubmit)}>
                  {isRegister && (
                    <input
                      className={styles.inputDefault}
                      type='text'
                      placeholder='User Name'
                      {...register('user_name', { required: true })}
                    />
                  )}
                  <input
                    className={styles.inputDefault}
                    type='email'
                    placeholder='Email'
                    {...register('email', { required: true })}
                  />
                  <input
                    className={styles.inputDefault}
                    type='password'
                    placeholder='Password'
                    {...register('password', { required: true })}
                  />
                  <div>
                    <button
                      className={`${styles.btn}${
                        isRegister ? 'bg-rose-600 hover:bg-rose-700' : ''
                      }`}
                    >
                      {' '}
                      {isRegister ? 'Sign Up' : 'Sign In'}
                    </button>{' '}
                  </div>
                  <button
                    className={`text-xs transition-color ${
                      isRegister
                        ? 'text-rose-600 hover:text-rose-700'
                        : 'text-teal-600 hover:text-teal-700'
                    }`}
                    onClick={() => setIsRegister(!isRegister)}
                  >
                    {isRegister ? 'Sign In' : 'Sign Up'}
                  </button>
                </form>
              </div>
            </div>
            <div
              className={`absolute top-0 right-0 w-5/12 h-full transition-all duration-700 ${
                styles.bgLogin
              } ${isRegister ? styles.register : ''}`}
            ></div>
          </div>
        </main>

        <Footer />
      </div>
    </div>
  )
}

export default Page
